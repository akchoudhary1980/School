// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using School;

namespace School.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20211225110911_ClsssModel")]
    partial class ClsssModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("School.Areas.Admin.Models.BoardModel", b =>
                {
                    b.Property<int>("BoardID")
                        .HasColumnType("int");

                    b.Property<string>("BoardDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoardID");

                    b.ToTable("BoardModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.ClassModel", b =>
                {
                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<string>("ClassDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassID");

                    b.ToTable("ClassModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.SchoolModel", b =>
                {
                    b.Property<int>("SchoolID")
                        .HasColumnType("int");

                    b.Property<string>("ContactMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EstablishedYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("SchoolAbout")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolBoard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolBoysOrGirls")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolBuildArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolCampusArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolClassFromTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolGroundArea")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SchoolNoOfClassRoom")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolNoOfLabRoom")
                        .HasColumnType("int");

                    b.Property<int?>("SchoolNoOfToilets")
                        .HasColumnType("int");

                    b.Property<string>("SchoolOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolTimmingFrom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolTimmingTo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolWebsite")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SchoolWhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionYearID")
                        .HasColumnType("int");

                    b.HasKey("SchoolID");

                    b.ToTable("SchoolModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.SectionModel", b =>
                {
                    b.Property<int>("SectionID")
                        .HasColumnType("int");

                    b.Property<string>("SectionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SectionID");

                    b.ToTable("SectionModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.SessionYearModel", b =>
                {
                    b.Property<int>("SessionYearID")
                        .HasColumnType("int");

                    b.Property<string>("SessionYearName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionYearRemark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SessionYearID");

                    b.ToTable("SessionYearModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.StaffModel", b =>
                {
                    b.Property<int>("StaffID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAppointment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StaffID");

                    b.ToTable("StaffModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.TeacherModel", b =>
                {
                    b.Property<int>("TeacherID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassSection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfAppointment")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsClassTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PFNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subjects")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeacherDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeacherID");

                    b.ToTable("TeacherModels");
                });

            modelBuilder.Entity("School.Areas.Admin.Models.UserModel", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("AccountStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCreateRights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WrightRights")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("UserModels");
                });
#pragma warning restore 612, 618
        }
    }
}
